//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region Метаданные связи EDM

[assembly: EdmRelationshipAttribute("SecurityDB.Models", "FK_AccessPagesInAccessGroups_AccessPages", "AccessPages", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NetTelco.NetTelcoAuth.AccessPages), "AccessPagesInAccessGroups", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetTelco.NetTelcoAuth.AccessPagesInAccessGroups), true)]
[assembly: EdmRelationshipAttribute("SecurityDB.Models", "FK_UsersInAccessGroups_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetTelco.NetTelcoAuth.Users), "UsersInAccessGroups", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetTelco.NetTelcoAuth.UsersInAccessGroups), true)]
[assembly: EdmRelationshipAttribute("SecurityDB.Models", "FK_AccessPagesInAccessGroups_AccessGroups", "AccessGroups", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NetTelco.NetTelcoAuth.AccessGroups), "AccessPagesInAccessGroups", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetTelco.NetTelcoAuth.AccessPagesInAccessGroups), true)]
[assembly: EdmRelationshipAttribute("SecurityDB.Models", "FK_UsersInAccessGroups_AccessGroups", "AccessGroups", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NetTelco.NetTelcoAuth.AccessGroups), "UsersInAccessGroups", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NetTelco.NetTelcoAuth.UsersInAccessGroups), true)]

#endregion

namespace NetTelco.NetTelcoAuth
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class SecurityDBEntities : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект SecurityDBEntities, используя строку соединения из раздела "SecurityDBEntities" файла конфигурации приложения.
        /// </summary>
        public SecurityDBEntities() : base("name=SecurityDBEntities", "SecurityDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта SecurityDBEntities.
        /// </summary>
        public SecurityDBEntities(string connectionString) : base(connectionString, "SecurityDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта SecurityDBEntities.
        /// </summary>
        public SecurityDBEntities(EntityConnection connection) : base(connection, "SecurityDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Users> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<Users>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<Users> _Users;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<AccessPages> AccessPages
        {
            get
            {
                if ((_AccessPages == null))
                {
                    _AccessPages = base.CreateObjectSet<AccessPages>("AccessPages");
                }
                return _AccessPages;
            }
        }
        private ObjectSet<AccessPages> _AccessPages;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<AccessPagesInAccessGroups> AccessPagesInAccessGroups
        {
            get
            {
                if ((_AccessPagesInAccessGroups == null))
                {
                    _AccessPagesInAccessGroups = base.CreateObjectSet<AccessPagesInAccessGroups>("AccessPagesInAccessGroups");
                }
                return _AccessPagesInAccessGroups;
            }
        }
        private ObjectSet<AccessPagesInAccessGroups> _AccessPagesInAccessGroups;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<UsersInAccessGroups> UsersInAccessGroups
        {
            get
            {
                if ((_UsersInAccessGroups == null))
                {
                    _UsersInAccessGroups = base.CreateObjectSet<UsersInAccessGroups>("UsersInAccessGroups");
                }
                return _UsersInAccessGroups;
            }
        }
        private ObjectSet<UsersInAccessGroups> _UsersInAccessGroups;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<AccessGroups> AccessGroups
        {
            get
            {
                if ((_AccessGroups == null))
                {
                    _AccessGroups = base.CreateObjectSet<AccessGroups>("AccessGroups");
                }
                return _AccessGroups;
            }
        }
        private ObjectSet<AccessGroups> _AccessGroups;

        #endregion
        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Users. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToUsers(Users users)
        {
            base.AddObject("Users", users);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet AccessPages. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToAccessPages(AccessPages accessPages)
        {
            base.AddObject("AccessPages", accessPages);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet AccessPagesInAccessGroups. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToAccessPagesInAccessGroups(AccessPagesInAccessGroups accessPagesInAccessGroups)
        {
            base.AddObject("AccessPagesInAccessGroups", accessPagesInAccessGroups);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet UsersInAccessGroups. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToUsersInAccessGroups(UsersInAccessGroups usersInAccessGroups)
        {
            base.AddObject("UsersInAccessGroups", usersInAccessGroups);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet AccessGroups. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToAccessGroups(AccessGroups accessGroups)
        {
            base.AddObject("AccessGroups", accessGroups);
        }

        #endregion
    }
    

    #endregion
    
    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SecurityDB.Models", Name="AccessGroups")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AccessGroups : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта AccessGroups.
        /// </summary>
        /// <param name="aCCESSGROUP_ID">Исходное значение свойства ACCESSGROUP_ID.</param>
        /// <param name="nAME">Исходное значение свойства NAME.</param>
        /// <param name="lABEL">Исходное значение свойства LABEL.</param>
        public static AccessGroups CreateAccessGroups(global::System.Int64 aCCESSGROUP_ID, global::System.String nAME, global::System.String lABEL)
        {
            AccessGroups accessGroups = new AccessGroups();
            accessGroups.ACCESSGROUP_ID = aCCESSGROUP_ID;
            accessGroups.NAME = nAME;
            accessGroups.LABEL = lABEL;
            return accessGroups;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ACCESSGROUP_ID
        {
            get
            {
                return _ACCESSGROUP_ID;
            }
            set
            {
                if (_ACCESSGROUP_ID != value)
                {
                    OnACCESSGROUP_IDChanging(value);
                    ReportPropertyChanging("ACCESSGROUP_ID");
                    _ACCESSGROUP_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ACCESSGROUP_ID");
                    OnACCESSGROUP_IDChanged();
                }
            }
        }
        private global::System.Int64 _ACCESSGROUP_ID;
        partial void OnACCESSGROUP_IDChanging(global::System.Int64 value);
        partial void OnACCESSGROUP_IDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LABEL
        {
            get
            {
                return _LABEL;
            }
            set
            {
                OnLABELChanging(value);
                ReportPropertyChanging("LABEL");
                _LABEL = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LABEL");
                OnLABELChanged();
            }
        }
        private global::System.String _LABEL;
        partial void OnLABELChanging(global::System.String value);
        partial void OnLABELChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DESCRIPTION
        {
            get
            {
                return _DESCRIPTION;
            }
            set
            {
                OnDESCRIPTIONChanging(value);
                ReportPropertyChanging("DESCRIPTION");
                _DESCRIPTION = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DESCRIPTION");
                OnDESCRIPTIONChanged();
            }
        }
        private global::System.String _DESCRIPTION;
        partial void OnDESCRIPTIONChanging(global::System.String value);
        partial void OnDESCRIPTIONChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SecurityDB.Models", "FK_AccessPagesInAccessGroups_AccessGroups", "AccessPagesInAccessGroups")]
        public EntityCollection<AccessPagesInAccessGroups> AccessPagesInAccessGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccessPagesInAccessGroups>("SecurityDB.Models.FK_AccessPagesInAccessGroups_AccessGroups", "AccessPagesInAccessGroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccessPagesInAccessGroups>("SecurityDB.Models.FK_AccessPagesInAccessGroups_AccessGroups", "AccessPagesInAccessGroups", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SecurityDB.Models", "FK_UsersInAccessGroups_AccessGroups", "UsersInAccessGroups")]
        public EntityCollection<UsersInAccessGroups> UsersInAccessGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UsersInAccessGroups>("SecurityDB.Models.FK_UsersInAccessGroups_AccessGroups", "UsersInAccessGroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UsersInAccessGroups>("SecurityDB.Models.FK_UsersInAccessGroups_AccessGroups", "UsersInAccessGroups", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SecurityDB.Models", Name="AccessPages")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AccessPages : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта AccessPages.
        /// </summary>
        /// <param name="aCCESSPAGE_ID">Исходное значение свойства ACCESSPAGE_ID.</param>
        /// <param name="nAME">Исходное значение свойства NAME.</param>
        public static AccessPages CreateAccessPages(global::System.Int64 aCCESSPAGE_ID, global::System.String nAME)
        {
            AccessPages accessPages = new AccessPages();
            accessPages.ACCESSPAGE_ID = aCCESSPAGE_ID;
            accessPages.NAME = nAME;
            return accessPages;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ACCESSPAGE_ID
        {
            get
            {
                return _ACCESSPAGE_ID;
            }
            set
            {
                if (_ACCESSPAGE_ID != value)
                {
                    OnACCESSPAGE_IDChanging(value);
                    ReportPropertyChanging("ACCESSPAGE_ID");
                    _ACCESSPAGE_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ACCESSPAGE_ID");
                    OnACCESSPAGE_IDChanged();
                }
            }
        }
        private global::System.Int64 _ACCESSPAGE_ID;
        partial void OnACCESSPAGE_IDChanging(global::System.Int64 value);
        partial void OnACCESSPAGE_IDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SecurityDB.Models", "FK_AccessPagesInAccessGroups_AccessPages", "AccessPagesInAccessGroups")]
        public EntityCollection<AccessPagesInAccessGroups> AccessPagesInAccessGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccessPagesInAccessGroups>("SecurityDB.Models.FK_AccessPagesInAccessGroups_AccessPages", "AccessPagesInAccessGroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccessPagesInAccessGroups>("SecurityDB.Models.FK_AccessPagesInAccessGroups_AccessPages", "AccessPagesInAccessGroups", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SecurityDB.Models", Name="AccessPagesInAccessGroups")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AccessPagesInAccessGroups : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта AccessPagesInAccessGroups.
        /// </summary>
        /// <param name="aPIAG_ID">Исходное значение свойства APIAG_ID.</param>
        public static AccessPagesInAccessGroups CreateAccessPagesInAccessGroups(global::System.Int64 aPIAG_ID)
        {
            AccessPagesInAccessGroups accessPagesInAccessGroups = new AccessPagesInAccessGroups();
            accessPagesInAccessGroups.APIAG_ID = aPIAG_ID;
            return accessPagesInAccessGroups;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 APIAG_ID
        {
            get
            {
                return _APIAG_ID;
            }
            set
            {
                if (_APIAG_ID != value)
                {
                    OnAPIAG_IDChanging(value);
                    ReportPropertyChanging("APIAG_ID");
                    _APIAG_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("APIAG_ID");
                    OnAPIAG_IDChanged();
                }
            }
        }
        private global::System.Int64 _APIAG_ID;
        partial void OnAPIAG_IDChanging(global::System.Int64 value);
        partial void OnAPIAG_IDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ACCESSPAGE_ID
        {
            get
            {
                return _ACCESSPAGE_ID;
            }
            set
            {
                OnACCESSPAGE_IDChanging(value);
                ReportPropertyChanging("ACCESSPAGE_ID");
                _ACCESSPAGE_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ACCESSPAGE_ID");
                OnACCESSPAGE_IDChanged();
            }
        }
        private Nullable<global::System.Int64> _ACCESSPAGE_ID;
        partial void OnACCESSPAGE_IDChanging(Nullable<global::System.Int64> value);
        partial void OnACCESSPAGE_IDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ACCESSGROUP_ID
        {
            get
            {
                return _ACCESSGROUP_ID;
            }
            set
            {
                OnACCESSGROUP_IDChanging(value);
                ReportPropertyChanging("ACCESSGROUP_ID");
                _ACCESSGROUP_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ACCESSGROUP_ID");
                OnACCESSGROUP_IDChanged();
            }
        }
        private Nullable<global::System.Int64> _ACCESSGROUP_ID;
        partial void OnACCESSGROUP_IDChanging(Nullable<global::System.Int64> value);
        partial void OnACCESSGROUP_IDChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SecurityDB.Models", "FK_AccessPagesInAccessGroups_AccessPages", "AccessPages")]
        public AccessPages AccessPages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccessPages>("SecurityDB.Models.FK_AccessPagesInAccessGroups_AccessPages", "AccessPages").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccessPages>("SecurityDB.Models.FK_AccessPagesInAccessGroups_AccessPages", "AccessPages").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AccessPages> AccessPagesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccessPages>("SecurityDB.Models.FK_AccessPagesInAccessGroups_AccessPages", "AccessPages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AccessPages>("SecurityDB.Models.FK_AccessPagesInAccessGroups_AccessPages", "AccessPages", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SecurityDB.Models", "FK_AccessPagesInAccessGroups_AccessGroups", "AccessGroups")]
        public AccessGroups AccessGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccessGroups>("SecurityDB.Models.FK_AccessPagesInAccessGroups_AccessGroups", "AccessGroups").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccessGroups>("SecurityDB.Models.FK_AccessPagesInAccessGroups_AccessGroups", "AccessGroups").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AccessGroups> AccessGroupsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccessGroups>("SecurityDB.Models.FK_AccessPagesInAccessGroups_AccessGroups", "AccessGroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AccessGroups>("SecurityDB.Models.FK_AccessPagesInAccessGroups_AccessGroups", "AccessGroups", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SecurityDB.Models", Name="Users")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Users : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Users.
        /// </summary>
        /// <param name="uSER_ID">Исходное значение свойства USER_ID.</param>
        /// <param name="fIRST_NAME">Исходное значение свойства FIRST_NAME.</param>
        /// <param name="lAST_NAME">Исходное значение свойства LAST_NAME.</param>
        /// <param name="lOGIN">Исходное значение свойства LOGIN.</param>
        /// <param name="pASSWORD">Исходное значение свойства PASSWORD.</param>
        /// <param name="pASSWORD_SALT">Исходное значение свойства PASSWORD_SALT.</param>
        /// <param name="cREATE_DATE">Исходное значение свойства CREATE_DATE.</param>
        /// <param name="lAST_MODIFIED_DATE">Исходное значение свойства LAST_MODIFIED_DATE.</param>
        /// <param name="lAST_LOGIN_DATE">Исходное значение свойства LAST_LOGIN_DATE.</param>
        /// <param name="iS_ACTIVATED">Исходное значение свойства IS_ACTIVATED.</param>
        /// <param name="iS_LOCKED_OUT">Исходное значение свойства IS_LOCKED_OUT.</param>
        /// <param name="lAST_LOCKED_OUT_DATE">Исходное значение свойства LAST_LOCKED_OUT_DATE.</param>
        /// <param name="iS_ADMIN">Исходное значение свойства IS_ADMIN.</param>
        public static Users CreateUsers(global::System.Int64 uSER_ID, global::System.String fIRST_NAME, global::System.String lAST_NAME, global::System.String lOGIN, global::System.String pASSWORD, global::System.String pASSWORD_SALT, global::System.DateTime cREATE_DATE, global::System.DateTime lAST_MODIFIED_DATE, global::System.DateTime lAST_LOGIN_DATE, global::System.Boolean iS_ACTIVATED, global::System.Boolean iS_LOCKED_OUT, global::System.DateTime lAST_LOCKED_OUT_DATE, global::System.Boolean iS_ADMIN)
        {
            Users users = new Users();
            users.USER_ID = uSER_ID;
            users.FIRST_NAME = fIRST_NAME;
            users.LAST_NAME = lAST_NAME;
            users.LOGIN = lOGIN;
            users.PASSWORD = pASSWORD;
            users.PASSWORD_SALT = pASSWORD_SALT;
            users.CREATE_DATE = cREATE_DATE;
            users.LAST_MODIFIED_DATE = lAST_MODIFIED_DATE;
            users.LAST_LOGIN_DATE = lAST_LOGIN_DATE;
            users.IS_ACTIVATED = iS_ACTIVATED;
            users.IS_LOCKED_OUT = iS_LOCKED_OUT;
            users.LAST_LOCKED_OUT_DATE = lAST_LOCKED_OUT_DATE;
            users.IS_ADMIN = iS_ADMIN;
            return users;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 USER_ID
        {
            get
            {
                return _USER_ID;
            }
            set
            {
                if (_USER_ID != value)
                {
                    OnUSER_IDChanging(value);
                    ReportPropertyChanging("USER_ID");
                    _USER_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("USER_ID");
                    OnUSER_IDChanged();
                }
            }
        }
        private global::System.Int64 _USER_ID;
        partial void OnUSER_IDChanging(global::System.Int64 value);
        partial void OnUSER_IDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FIRST_NAME
        {
            get
            {
                return _FIRST_NAME;
            }
            set
            {
                OnFIRST_NAMEChanging(value);
                ReportPropertyChanging("FIRST_NAME");
                _FIRST_NAME = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FIRST_NAME");
                OnFIRST_NAMEChanged();
            }
        }
        private global::System.String _FIRST_NAME;
        partial void OnFIRST_NAMEChanging(global::System.String value);
        partial void OnFIRST_NAMEChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LAST_NAME
        {
            get
            {
                return _LAST_NAME;
            }
            set
            {
                OnLAST_NAMEChanging(value);
                ReportPropertyChanging("LAST_NAME");
                _LAST_NAME = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LAST_NAME");
                OnLAST_NAMEChanged();
            }
        }
        private global::System.String _LAST_NAME;
        partial void OnLAST_NAMEChanging(global::System.String value);
        partial void OnLAST_NAMEChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MIDDLE_NAME
        {
            get
            {
                return _MIDDLE_NAME;
            }
            set
            {
                OnMIDDLE_NAMEChanging(value);
                ReportPropertyChanging("MIDDLE_NAME");
                _MIDDLE_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MIDDLE_NAME");
                OnMIDDLE_NAMEChanged();
            }
        }
        private global::System.String _MIDDLE_NAME;
        partial void OnMIDDLE_NAMEChanging(global::System.String value);
        partial void OnMIDDLE_NAMEChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LOGIN
        {
            get
            {
                return _LOGIN;
            }
            set
            {
                OnLOGINChanging(value);
                ReportPropertyChanging("LOGIN");
                _LOGIN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LOGIN");
                OnLOGINChanged();
            }
        }
        private global::System.String _LOGIN;
        partial void OnLOGINChanging(global::System.String value);
        partial void OnLOGINChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PASSWORD
        {
            get
            {
                return _PASSWORD;
            }
            set
            {
                OnPASSWORDChanging(value);
                ReportPropertyChanging("PASSWORD");
                _PASSWORD = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PASSWORD");
                OnPASSWORDChanged();
            }
        }
        private global::System.String _PASSWORD;
        partial void OnPASSWORDChanging(global::System.String value);
        partial void OnPASSWORDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PASSWORD_SALT
        {
            get
            {
                return _PASSWORD_SALT;
            }
            set
            {
                OnPASSWORD_SALTChanging(value);
                ReportPropertyChanging("PASSWORD_SALT");
                _PASSWORD_SALT = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PASSWORD_SALT");
                OnPASSWORD_SALTChanged();
            }
        }
        private global::System.String _PASSWORD_SALT;
        partial void OnPASSWORD_SALTChanging(global::System.String value);
        partial void OnPASSWORD_SALTChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EMAIL
        {
            get
            {
                return _EMAIL;
            }
            set
            {
                OnEMAILChanging(value);
                ReportPropertyChanging("EMAIL");
                _EMAIL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EMAIL");
                OnEMAILChanged();
            }
        }
        private global::System.String _EMAIL;
        partial void OnEMAILChanging(global::System.String value);
        partial void OnEMAILChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CREATE_DATE
        {
            get
            {
                return _CREATE_DATE;
            }
            set
            {
                OnCREATE_DATEChanging(value);
                ReportPropertyChanging("CREATE_DATE");
                _CREATE_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CREATE_DATE");
                OnCREATE_DATEChanged();
            }
        }
        private global::System.DateTime _CREATE_DATE;
        partial void OnCREATE_DATEChanging(global::System.DateTime value);
        partial void OnCREATE_DATEChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LAST_MODIFIED_DATE
        {
            get
            {
                return _LAST_MODIFIED_DATE;
            }
            set
            {
                OnLAST_MODIFIED_DATEChanging(value);
                ReportPropertyChanging("LAST_MODIFIED_DATE");
                _LAST_MODIFIED_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LAST_MODIFIED_DATE");
                OnLAST_MODIFIED_DATEChanged();
            }
        }
        private global::System.DateTime _LAST_MODIFIED_DATE;
        partial void OnLAST_MODIFIED_DATEChanging(global::System.DateTime value);
        partial void OnLAST_MODIFIED_DATEChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LAST_LOGIN_DATE
        {
            get
            {
                return _LAST_LOGIN_DATE;
            }
            set
            {
                OnLAST_LOGIN_DATEChanging(value);
                ReportPropertyChanging("LAST_LOGIN_DATE");
                _LAST_LOGIN_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LAST_LOGIN_DATE");
                OnLAST_LOGIN_DATEChanged();
            }
        }
        private global::System.DateTime _LAST_LOGIN_DATE;
        partial void OnLAST_LOGIN_DATEChanging(global::System.DateTime value);
        partial void OnLAST_LOGIN_DATEChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LAST_LOGIN_IP
        {
            get
            {
                return _LAST_LOGIN_IP;
            }
            set
            {
                OnLAST_LOGIN_IPChanging(value);
                ReportPropertyChanging("LAST_LOGIN_IP");
                _LAST_LOGIN_IP = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LAST_LOGIN_IP");
                OnLAST_LOGIN_IPChanged();
            }
        }
        private global::System.String _LAST_LOGIN_IP;
        partial void OnLAST_LOGIN_IPChanging(global::System.String value);
        partial void OnLAST_LOGIN_IPChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IS_ACTIVATED
        {
            get
            {
                return _IS_ACTIVATED;
            }
            set
            {
                OnIS_ACTIVATEDChanging(value);
                ReportPropertyChanging("IS_ACTIVATED");
                _IS_ACTIVATED = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IS_ACTIVATED");
                OnIS_ACTIVATEDChanged();
            }
        }
        private global::System.Boolean _IS_ACTIVATED;
        partial void OnIS_ACTIVATEDChanging(global::System.Boolean value);
        partial void OnIS_ACTIVATEDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IS_LOCKED_OUT
        {
            get
            {
                return _IS_LOCKED_OUT;
            }
            set
            {
                OnIS_LOCKED_OUTChanging(value);
                ReportPropertyChanging("IS_LOCKED_OUT");
                _IS_LOCKED_OUT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IS_LOCKED_OUT");
                OnIS_LOCKED_OUTChanged();
            }
        }
        private global::System.Boolean _IS_LOCKED_OUT;
        partial void OnIS_LOCKED_OUTChanging(global::System.Boolean value);
        partial void OnIS_LOCKED_OUTChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LAST_LOCKED_OUT_DATE
        {
            get
            {
                return _LAST_LOCKED_OUT_DATE;
            }
            set
            {
                OnLAST_LOCKED_OUT_DATEChanging(value);
                ReportPropertyChanging("LAST_LOCKED_OUT_DATE");
                _LAST_LOCKED_OUT_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LAST_LOCKED_OUT_DATE");
                OnLAST_LOCKED_OUT_DATEChanged();
            }
        }
        private global::System.DateTime _LAST_LOCKED_OUT_DATE;
        partial void OnLAST_LOCKED_OUT_DATEChanging(global::System.DateTime value);
        partial void OnLAST_LOCKED_OUT_DATEChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LAST_LOCKED_OUT_REASON
        {
            get
            {
                return _LAST_LOCKED_OUT_REASON;
            }
            set
            {
                OnLAST_LOCKED_OUT_REASONChanging(value);
                ReportPropertyChanging("LAST_LOCKED_OUT_REASON");
                _LAST_LOCKED_OUT_REASON = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LAST_LOCKED_OUT_REASON");
                OnLAST_LOCKED_OUT_REASONChanged();
            }
        }
        private global::System.String _LAST_LOCKED_OUT_REASON;
        partial void OnLAST_LOCKED_OUT_REASONChanging(global::System.String value);
        partial void OnLAST_LOCKED_OUT_REASONChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IS_ADMIN
        {
            get
            {
                return _IS_ADMIN;
            }
            set
            {
                OnIS_ADMINChanging(value);
                ReportPropertyChanging("IS_ADMIN");
                _IS_ADMIN = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IS_ADMIN");
                OnIS_ADMINChanged();
            }
        }
        private global::System.Boolean _IS_ADMIN;
        partial void OnIS_ADMINChanging(global::System.Boolean value);
        partial void OnIS_ADMINChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SecurityDB.Models", "FK_UsersInAccessGroups_Users", "UsersInAccessGroups")]
        public EntityCollection<UsersInAccessGroups> UsersInAccessGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UsersInAccessGroups>("SecurityDB.Models.FK_UsersInAccessGroups_Users", "UsersInAccessGroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UsersInAccessGroups>("SecurityDB.Models.FK_UsersInAccessGroups_Users", "UsersInAccessGroups", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SecurityDB.Models", Name="UsersInAccessGroups")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UsersInAccessGroups : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта UsersInAccessGroups.
        /// </summary>
        /// <param name="uIAG_ID">Исходное значение свойства UIAG_ID.</param>
        /// <param name="uSER_ID">Исходное значение свойства USER_ID.</param>
        /// <param name="aCCESSGROUP_ID">Исходное значение свойства ACCESSGROUP_ID.</param>
        public static UsersInAccessGroups CreateUsersInAccessGroups(global::System.Int64 uIAG_ID, global::System.Int64 uSER_ID, global::System.Int64 aCCESSGROUP_ID)
        {
            UsersInAccessGroups usersInAccessGroups = new UsersInAccessGroups();
            usersInAccessGroups.UIAG_ID = uIAG_ID;
            usersInAccessGroups.USER_ID = uSER_ID;
            usersInAccessGroups.ACCESSGROUP_ID = aCCESSGROUP_ID;
            return usersInAccessGroups;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 UIAG_ID
        {
            get
            {
                return _UIAG_ID;
            }
            set
            {
                if (_UIAG_ID != value)
                {
                    OnUIAG_IDChanging(value);
                    ReportPropertyChanging("UIAG_ID");
                    _UIAG_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UIAG_ID");
                    OnUIAG_IDChanged();
                }
            }
        }
        private global::System.Int64 _UIAG_ID;
        partial void OnUIAG_IDChanging(global::System.Int64 value);
        partial void OnUIAG_IDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 USER_ID
        {
            get
            {
                return _USER_ID;
            }
            set
            {
                OnUSER_IDChanging(value);
                ReportPropertyChanging("USER_ID");
                _USER_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("USER_ID");
                OnUSER_IDChanged();
            }
        }
        private global::System.Int64 _USER_ID;
        partial void OnUSER_IDChanging(global::System.Int64 value);
        partial void OnUSER_IDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ACCESSGROUP_ID
        {
            get
            {
                return _ACCESSGROUP_ID;
            }
            set
            {
                OnACCESSGROUP_IDChanging(value);
                ReportPropertyChanging("ACCESSGROUP_ID");
                _ACCESSGROUP_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ACCESSGROUP_ID");
                OnACCESSGROUP_IDChanged();
            }
        }
        private global::System.Int64 _ACCESSGROUP_ID;
        partial void OnACCESSGROUP_IDChanging(global::System.Int64 value);
        partial void OnACCESSGROUP_IDChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SecurityDB.Models", "FK_UsersInAccessGroups_Users", "Users")]
        public Users Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("SecurityDB.Models.FK_UsersInAccessGroups_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("SecurityDB.Models.FK_UsersInAccessGroups_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Users> UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("SecurityDB.Models.FK_UsersInAccessGroups_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Users>("SecurityDB.Models.FK_UsersInAccessGroups_Users", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SecurityDB.Models", "FK_UsersInAccessGroups_AccessGroups", "AccessGroups")]
        public AccessGroups AccessGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccessGroups>("SecurityDB.Models.FK_UsersInAccessGroups_AccessGroups", "AccessGroups").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccessGroups>("SecurityDB.Models.FK_UsersInAccessGroups_AccessGroups", "AccessGroups").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AccessGroups> AccessGroupsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccessGroups>("SecurityDB.Models.FK_UsersInAccessGroups_AccessGroups", "AccessGroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AccessGroups>("SecurityDB.Models.FK_UsersInAccessGroups_AccessGroups", "AccessGroups", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
